const hre = require("hardhat");

const bytecode =
  "0x61027a600f60003961027a6000f3003c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d226e6f223f3e3c7376672077696474683d2236303022206865696768743d22363030222076696577426f783d22302030203137203137222076657273696f6e3d22312e312220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e3c673e3c72656374207374796c653d2266696c6c3a23303030303030222069643d2272656374333134222077696474683d223122206865696768743d2231372220783d22302220793d2230222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222069643d2272656374333136222077696474683d22313722206865696768743d22312220783d22302220793d2230222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222077696474683d223122206865696768743d2231372220783d2231362220793d2230222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222077696474683d22313722206865696768743d22312220783d22302220793d223136222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222077696474683d223322206865696768743d22342220783d22322220793d2232222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222077696474683d22313322206865696768743d22312220783d22322220793d223130222f3e3c72656374207374796c653d2266696c6c3a233030303030303b222077696474683d223322206865696768743d22342220783d2231322220793d2232222f3e3c2f673e3c2f7376673e";

async function main() {
  const [owner, addr1] = await ethers.getSigners();
  const provider = owner.provider;

  const bytecodeDeployed = await owner.sendTransaction({
    data: bytecode,
  });
  const receipt1 = await bytecodeDeployed.wait();

  const simpleSvgFactoryData = await ethers.getContractFactory("SimpleSVGData");
  const s = await simpleSvgFactoryData.deploy();
  const receipt2 = await s.deployTransaction.wait();

  const a = receipt1.gasUsed;
  const b = receipt2.gasUsed;
  const v = b.mul(100).div(a);

  console.log("Gas for raw bytecode      ", a.toString());
  console.log(
    "Gas for contract with data",
    b.toString(),
    "(" + v.toString() + "%)"
  );
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
